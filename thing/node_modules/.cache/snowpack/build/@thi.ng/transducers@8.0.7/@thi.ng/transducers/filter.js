import { isIterable } from '@thi.ng/checks/is-iterable';
import { c as compR } from '../../common/compr-047fbcec.js';
import { iterator1 } from './iterator.js';
import '@thi.ng/api/api';
import '../../common/ensure-ec27f47c.js';
import '@thi.ng/checks/implements-function';
import './push.js';
import './reduce.js';
import '@thi.ng/checks/is-arraylike';
import '@thi.ng/errors/illegal-arity';
import '../../common/reduced-6f291092.js';

function filter(pred, src) {
    return isIterable(src)
        ? iterator1(filter(pred), src)
        : (rfn) => {
            const r = rfn[2];
            return compR(rfn, (acc, x) => (pred(x) ? r(acc, x) : acc));
        };
}

export { filter };
