import { __iter, iterator } from './iterator.js';
import { u as unreduced, i as isReduced, e as ensureReduced } from '../../common/reduced-6f291092.js';
import '@thi.ng/api/api';
import '@thi.ng/checks/is-iterable';
import '../../common/ensure-ec27f47c.js';
import '@thi.ng/checks/implements-function';
import './push.js';
import './reduce.js';
import '@thi.ng/checks/is-arraylike';
import '@thi.ng/errors/illegal-arity';

function scan(...args) {
    return ((args.length > 2 && __iter(scan, args, iterator)) ||
        (([inito, completeo, reduceo]) => {
            const [initi, completei, reducei] = args[0];
            let acc = args.length > 1 && args[1] != null ? args[1] : initi();
            return [
                inito,
                (_acc) => {
                    let a = completei(acc);
                    if (a !== acc) {
                        _acc = unreduced(reduceo(_acc, a));
                    }
                    acc = a;
                    return completeo(_acc);
                },
                (_acc, x) => {
                    acc = reducei(acc, x);
                    if (isReduced(acc)) {
                        return ensureReduced(reduceo(_acc, acc.deref()));
                    }
                    return reduceo(_acc, acc);
                },
            ];
        }));
}

export { scan };
