import { isNumber } from '@thi.ng/checks/is-number';
import { setC4, setC6, setC } from '@thi.ng/vectors/setc';

/**
 * Computes 2x2 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */
const scale22 = (m, s) => ((s = isNumber(s) ? [s, s] : s), setC4(m || [], s[0], 0, 0, s[1]));
/**
 * Computes 2x3 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */
const scale23 = (m, s) => ((s = isNumber(s) ? [s, s] : s), setC6(m || [], s[0], 0, 0, s[1], 0, 0));
/**
 * Computes 3x3 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */
const scale33 = (m, s) => ((s = isNumber(s) ? [s, s, s] : s),
    setC(m || [], s[0], 0, 0, 0, s[1], 0, 0, 0, s[2]));
/**
 * Computes 4x4 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */
const scale44 = (m, s) => ((s = isNumber(s) ? [s, s, s] : s),
    setC(m || [], 
    // x
    s[0], 0, 0, 0, 
    // y
    0, s[1], 0, 0, 
    // z
    0, 0, s[2], 0, 
    // w
    0, 0, 0, s[3] !== undefined ? s[3] : 1));

export { scale22, scale23, scale33, scale44 };
