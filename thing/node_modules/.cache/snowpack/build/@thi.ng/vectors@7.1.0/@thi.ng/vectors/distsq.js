import { compileG, compile } from './compile/emit.js';
import { vop } from './vop.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import './compile/templates.js';
import '@thi.ng/errors/unsupported';

const tpl = ([a, b]) => `t=${a}-${b};s+=t*t;`;
const pre = "let t,s=0;";
const $ = (dim) => distSq.add(dim, compile(dim, tpl, "a,b", undefined, "s", "", pre));
const distSq = vop();
distSq.default(compileG(tpl, "a,b", undefined, "s", pre));
const distSq2 = $(2);
const distSq3 = $(3);
const distSq4 = $(4);

export { distSq, distSq2, distSq3, distSq4 };
