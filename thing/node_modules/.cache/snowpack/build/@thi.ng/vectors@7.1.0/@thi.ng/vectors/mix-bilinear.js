import { mixBilinear as mixBilinear$1 } from '@thi.ng/math/mix';
import { defHofOp } from './compile/emit.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import './vop.js';
import '@thi.ng/errors/unsupported';
import './compile/templates.js';

const [mixBilinear, mixBilinear2, mixBilinear3, mixBilinear4] = defHofOp(mixBilinear$1, ([o, a, b, c, d]) => `${o}=op(${a},${b},${c},${d},u,v);`, "o,a,b,c,d,u,v");

export { mixBilinear, mixBilinear2, mixBilinear3, mixBilinear4 };
