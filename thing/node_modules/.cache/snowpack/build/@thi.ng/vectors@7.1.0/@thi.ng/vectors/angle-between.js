import { absInnerAngle } from '@thi.ng/math/angle';
import { cross2 } from './cross.js';
import { dot } from './dot.js';
import { mag } from './mag.js';
import './setc.js';
import './compile/emit.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import './vop.js';
import '@thi.ng/errors/unsupported';
import './compile/templates.js';
import './magsq.js';

const angleRatio = (a, b) => dot(a, b) / (mag(a) * mag(b));
const angleBetween2 = (a, b, absInner = false) => {
    const t = Math.atan2(cross2(a, b), dot(a, b));
    return absInner ? absInnerAngle(t) : t;
};
const angleBetween3 = (a, b, normalize = true, absInner = false) => {
    const t = normalize ? Math.acos(angleRatio(a, b)) : Math.acos(dot(a, b));
    return absInner ? absInnerAngle(t) : t;
};

export { angleBetween2, angleBetween3, angleRatio };
