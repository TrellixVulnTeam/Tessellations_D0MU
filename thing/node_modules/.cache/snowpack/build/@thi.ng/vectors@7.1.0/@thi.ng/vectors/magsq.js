import { compileG, compile } from './compile/emit.js';
import { vop } from './vop.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import './compile/templates.js';
import '@thi.ng/errors/unsupported';

const $ = (dim) => magSq.add(dim, compile(dim, ([a]) => `${a}*${a}`, "a", "a", "", "+", "return ", ";"));
const magSq = vop();
magSq.default(compileG(([a]) => `sum+=${a}*${a};`, "a", undefined, "sum", "let sum=0;"));
const magSq2 = $(2);
const magSq3 = $(3);
const magSq4 = $(4);

export { magSq, magSq2, magSq3, magSq4 };
