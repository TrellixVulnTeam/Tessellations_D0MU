import { compileG, compile } from './compile/emit.js';
import { DOT_G, DOT } from './compile/templates.js';
import { vop } from './vop.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import '@thi.ng/errors/unsupported';

const $ = (dim) => dot.add(dim, compile(dim, DOT, "a,b", undefined, "", "+", "return ", ";"));
const dot = vop();
dot.default(compileG(DOT_G, "a,b", undefined, "s", "let s=0;"));
const dot2 = $(2);
const dot3 = $(3);
const dot4 = $(4);

export { dot, dot2, dot3, dot4 };
