import { addW3 } from './addw.js';
import './maddn.js';
import './compile/emit.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import './vop.js';
import '@thi.ng/errors/unsupported';
import './compile/templates.js';
import './muln.js';

/**
 * Vector version of {@link @thi.ng/math#mixQuadratic}.
 *
 * @param out - result
 * @param a -
 * @param b -
 * @param c -
 * @param t - interpolation coeff [0..1]
 */
const mixQuadratic = (out, a, b, c, t) => {
    const s = 1 - t;
    return addW3(out, a, b, c, s * s, 2 * s * t, t * t);
};

export { mixQuadratic };
