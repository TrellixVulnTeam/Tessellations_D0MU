import { defOp } from './compile/emit.js';
import { SET_N } from './compile/templates.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import './vop.js';
import '@thi.ng/errors/unsupported';

const [setN, setN2, setN3, setN4] = defOp(SET_N, "a,n", "a", "a", 0, "");
const zero = (a) => setN(a, 0);
const one = (a) => setN(a, 1);
const zeroes = (n) => new Array(n).fill(0);
const ones = (n) => new Array(n).fill(1);

export { one, ones, setN, setN2, setN3, setN4, zero, zeroes };
