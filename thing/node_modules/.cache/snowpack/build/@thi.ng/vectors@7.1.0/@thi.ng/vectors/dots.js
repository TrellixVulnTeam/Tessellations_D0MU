import { compile } from './compile/emit.js';
import { SARGS_V, DOT } from './compile/templates.js';
import '@thi.ng/transducers/comp';
import '@thi.ng/transducers/map';
import '@thi.ng/transducers/map-indexed';
import '@thi.ng/transducers/range';
import '@thi.ng/transducers/str';
import '@thi.ng/transducers/take';
import '@thi.ng/transducers/transduce';
import '@thi.ng/transducers/zip';
import './vop.js';
import '@thi.ng/errors/unsupported';

const dotS = (a, b, n, ia = 0, ib = 0, sa = 1, sb = 1) => {
    let sum = 0;
    for (; --n >= 0; ia += sa, ib += sb)
        sum += a[ia] * b[ib];
    return sum;
};
const $ = (dim) => compile(dim, DOT, `o,a,${SARGS_V}`, "o,a", "", "+", "return ", ";", true);
const dotS2 = $(2);
const dotS3 = $(3);
const dotS4 = $(4);

export { dotS, dotS2, dotS3, dotS4 };
