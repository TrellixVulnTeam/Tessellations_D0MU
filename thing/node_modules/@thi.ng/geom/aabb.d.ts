import type { Attribs } from "@thi.ng/geom-api";
import { ReadonlyVec, Vec } from "@thi.ng/vectors/api";
import { AABB } from "./api/aabb.js";
import type { Sphere } from "./api/sphere.js";
export declare function aabb(pos: Vec, size: number | Vec, attribs?: Attribs): AABB;
export declare function aabb(size: number | Vec, attribs?: Attribs): AABB;
export declare function aabb(attribs?: Attribs): AABB;
export declare const aabbFromMinMax: (min: Vec, max: Vec, attribs?: Attribs | undefined) => AABB;
/**
 * Returns the intersection AABB of given inputs or `undefined` if they
 * are non-overlapping.
 *
 * @param a
 * @param b
 */
export declare const intersectionAABB: (a: AABB, b: AABB) => AABB | undefined;
/**
 * Returns square inscribed in given circle instance. The circle can also be
 * given as centroid & radius.
 *
 * @param sphere - target sphere
 */
export declare function inscribedAABB(sphere: Sphere): AABB;
export declare function inscribedAABB(pos: ReadonlyVec, r: number): AABB;
//# sourceMappingURL=aabb.d.ts.map