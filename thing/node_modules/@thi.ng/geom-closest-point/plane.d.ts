import type { ReadonlyVec, Vec } from "@thi.ng/vectors";
/**
 * Returns signed distance between point `p` and plane defined by normal `n` and
 * `w`. In 2D this also works for lines.
 *
 * @remarks
 * If result is > 0 the point lies "above" the plane, if < 0 below the plane or
 * if zero on the plane.
 *
 * @param p
 * @param n
 * @param w
 */
export declare const distToPlane: (p: ReadonlyVec, n: ReadonlyVec, w: number) => number;
/**
 * Returns closest point to `p` on the plane defined by normal `n` and `w`. In
 * 2D this also works for lines.
 *
 * @param p
 * @param normal
 * @param w
 * @param out
 */
export declare const closestPointPlane: (p: ReadonlyVec, normal: ReadonlyVec, w: number, out?: Vec) => Vec;
//# sourceMappingURL=plane.d.ts.map