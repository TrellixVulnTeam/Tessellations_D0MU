import type { ReadonlyVec, Vec } from "./api.js";
/**
 * Calculates the nD point laying on ray at given distance. `rayDir` MUST be
 * normalized.
 *
 * @param out -
 * @param rayOrigin -
 * @param rayDir -
 * @param dist -
 */
export declare const pointOnRay: (out: Vec | null, rayOrigin: ReadonlyVec, rayDir: ReadonlyVec, dist: number) => Vec;
/**
 * 2D version of {@link pointOnRay}.
 *
 * @param out -
 * @param rayOrigin -
 * @param rayDir -
 * @param dist -
 */
export declare const pointOnRay2: (out: Vec | null, rayOrigin: ReadonlyVec, rayDir: ReadonlyVec, dist: number) => Vec;
/**
 * 3D version of {@link pointOnRay}.
 *
 * @param out -
 * @param rayOrigin -
 * @param rayDir -
 * @param dist -
 */
export declare const pointOnRay3: (out: Vec | null, rayOrigin: ReadonlyVec, rayDir: ReadonlyVec, dist: number) => Vec;
//# sourceMappingURL=point-on-ray.d.ts.map