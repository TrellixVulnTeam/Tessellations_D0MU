import type { ReadonlyVec, Vec } from "./api.js";
/**
 * Computes 2D normal by rotating direction vector `a` -> `b`, 90 deg
 * counterclockwise, normalized to length `n` (default: 1). If `out` is
 * null, creates new vector.
 *
 * @param out -
 * @param a -
 * @param b -
 * @param n -
 */
export declare const normalCCW: (out: Vec, a: ReadonlyVec, b: ReadonlyVec, n?: number) => Vec;
/**
 * Computes 2D normal by rotating direction vector `a` -> `b`, 90 deg
 * clockwise, normalized to length `n` (default: 1). If `out` is null,
 * creates new vector.
 *
 * @param out -
 * @param a -
 * @param b -
 * @param n -
 */
export declare const normalCW: (out: Vec, a: ReadonlyVec, b: ReadonlyVec, n?: number) => Vec;
//# sourceMappingURL=normal.d.ts.map