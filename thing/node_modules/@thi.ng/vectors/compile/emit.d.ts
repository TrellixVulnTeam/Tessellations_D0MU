import type { FnU2 } from "@thi.ng/api";
import type { MultiVecOpVN, MultiVecOpVV, Template, VecOpVN, VecOpVV } from "../api.js";
/** @internal */
export declare const defaultOut: FnU2<string>;
/** @internal */
export declare const compile: (dim: number, tpl: Template, args: string, syms?: string, ret?: string, opJoin?: string | undefined, pre?: string | undefined, post?: string | undefined, strided?: boolean) => any;
/** @internal */
export declare const compileHOF: (dim: number, fns: any[], tpl: Template, hofArgs: string, args: string, syms?: string, ret?: string, opJoin?: string, pre?: string | undefined, post?: string | undefined, strided?: boolean) => any;
/** @internal */
export declare const compileG: (tpl: Template, args: string, syms?: string, ret?: string, pre?: string | undefined, post?: string | undefined, strided?: boolean) => any;
/** @internal */
export declare const compileS: (tpl: Template, args: string, syms?: string, ret?: string | undefined, pre?: string | undefined, post?: string | undefined) => any;
/** @internal */
export declare const compileGHOF: (fns: any[], tpl: Template, hofArgs: string, args: string, syms?: string, ret?: string, pre?: string | undefined, post?: string | undefined, strided?: boolean) => any;
export declare const defOp: <MULTI, FIXED>(tpl: Template, args?: string, syms?: string | undefined, ret?: string, dispatch?: number, pre?: string | undefined) => [MULTI, ...FIXED[]];
export declare const defFnOp: <MULTI, FIXED>(op: string) => [MULTI, ...FIXED[]];
export declare const defHofOp: <MULTI, FIXED>(op: any, tpl?: Template | undefined, args?: string, syms?: string | undefined, ret?: string, dispatch?: number, pre?: string | undefined) => [MULTI, ...FIXED[]];
export declare const defOpS: <GENERIC, FIXED>(tpl: Template, args?: string, idxArgs?: string, syms?: string, ret?: string, pre?: string | undefined, sizes?: number[]) => [GENERIC, ...FIXED[]];
export declare const defHofOpS: <GENERIC, FIXED>(op: any, tpl: Template, args?: string, idxArgs?: string, syms?: string, ret?: string, pre?: string | undefined, sizes?: number[]) => [GENERIC, ...FIXED[]];
export declare const defMathOp: (op: string) => [MultiVecOpVV, ...VecOpVV[]];
export declare const defMathOpN: (op: string) => [MultiVecOpVN, ...VecOpVN[]];
export declare const defBitOp: (op: string, signed?: boolean) => [MultiVecOpVV, ...VecOpVV[]];
export declare const defBitOpN: (op: string, signed?: boolean) => [MultiVecOpVN, ...VecOpVN[]];
//# sourceMappingURL=emit.d.ts.map