import type { ReadonlyVec } from "@thi.ng/vectors";
import type { Mat } from "./api.js";
/**
 * Constructs a 3x3 matrix representing a rotation of `theta` around
 * `axis` and writes result to `out`. If `normalize` is true (default
 * false), non-destructively first normalizes axis vector.
 *
 * @param out -
 * @param axis -
 * @param theta -
 * @param normalize -
 */
export declare const rotationAroundAxis33: (out: Mat | null, axis: ReadonlyVec, theta: number, normalize?: boolean) => Mat;
/**
 * Constructs a 4x4 matrix representing a rotation of `theta` around
 * `axis` and writes result to `out`. If `normalize` is true (default
 * false), non-destructively first normalizes axis vector.
 *
 * @param out -
 * @param axis -
 * @param theta -
 * @param normalize -
 */
export declare const rotationAroundAxis44: (out: Mat | null, axis: ReadonlyVec, theta: number, normalize?: boolean) => import("@thi.ng/vectors").Vec;
//# sourceMappingURL=rotation-around-axis.d.ts.map