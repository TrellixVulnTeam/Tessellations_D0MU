import type { ReadonlyVec, Vec } from "@thi.ng/vectors";
import type { ReadonlyMat } from "./api.js";
/**
 * Same as:
 *
 * @example
 * ```ts
 * out[0] = dot(v, column(m, 0))
 * out[1] = dot(v, column(m, 1))
 * ```
 *
 * @param out -
 * @param v -
 * @param m -
 */
export declare const mulVM22: (out: Vec | null, v: ReadonlyVec, m: ReadonlyMat) => Vec;
export declare const mulVM23: (out: Vec | null, v: ReadonlyVec, m: ReadonlyMat) => Vec;
/**
 * Same as:
 *
 * @example
 * ```ts
 * out[0] = dot(v, column(m, 0))
 * out[1] = dot(v, column(m, 1))
 * out[2] = dot(v, column(m, 2))
 * ```
 *
 * @param out -
 * @param v -
 * @param m -
 */
export declare const mulVM33: (out: Vec | null, v: ReadonlyVec, m: ReadonlyMat) => Vec;
/**
 * Same as:
 *
 * @example
 * ```ts
 * out[0] = dot(v, column(m, 0))
 * out[1] = dot(v, column(m, 1))
 * out[2] = dot(v, column(m, 2))
 * out[3] = dot(v, column(m, 3))
 * ```
 *
 * @param out -
 * @param v -
 * @param m -
 */
export declare const mulVM44: (out: Vec | null, v: ReadonlyVec, m: ReadonlyMat) => Vec;
//# sourceMappingURL=mulvm.d.ts.map