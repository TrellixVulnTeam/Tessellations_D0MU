import type { ReadonlyVec, Vec, VecPair } from "@thi.ng/vectors";
export declare class Sampler {
    points: ReadonlyVec[];
    index: number[];
    constructor(points: ReadonlyVec[], closed?: boolean);
    totalLength(): number;
    pointAt(t: number): Vec | undefined;
    closestPoint(p: ReadonlyVec): Vec | undefined;
    closestT(p: ReadonlyVec): number | undefined;
    segmentAt(t: number): VecPair | undefined;
    tangentAt(t: number, n?: number): Vec | undefined;
    splitAt(t: number): Vec[][] | undefined;
    splitNear(p: ReadonlyVec): Vec[][] | undefined;
    indexAt(t: number): number | undefined;
    sampleUniform(dist: number, includeLast?: boolean, result?: Vec[]): Vec[];
    sampleFixedNum(num: number, includeLast?: boolean, result?: Vec[]): Vec[];
    protected buildIndex(): void;
}
//# sourceMappingURL=sampler.d.ts.map