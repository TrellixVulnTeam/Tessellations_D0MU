import type { NumericArray } from "@thi.ng/api";
import type { IRandom } from "@thi.ng/random";
import type { Color, ColorFactory, ReadonlyColor, TypedColor } from "../api.js";
export declare class Oklab implements TypedColor<Oklab> {
    buf: NumericArray;
    offset: number;
    stride: number;
    l: number;
    a: number;
    b: number;
    alpha: number;
    [id: number]: number;
    readonly mode: "oklab";
    readonly length: 4;
    readonly range: [ReadonlyColor, ReadonlyColor];
    [Symbol.iterator](): Iterator<number, any, undefined>;
    clamp(): this;
    copy(): Oklab;
    copyView(): Oklab;
    deref(): Color;
    empty(): Oklab;
    eqDelta(o: Oklab, eps?: number): boolean;
    randomize(rnd?: IRandom): this;
    set(src: ReadonlyColor): this;
    toJSON(): number[];
}
/**
 * Oklab color type. Conversions assume {@link D65} white point).
 *
 * @remarks
 * Reference: https://bottosson.github.io/posts/oklab/
 */
export declare const oklab: ColorFactory<Oklab>;
//# sourceMappingURL=oklab.d.ts.map