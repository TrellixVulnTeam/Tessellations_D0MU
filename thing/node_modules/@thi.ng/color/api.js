/**
 * Hue names in radial order, e.g. used by {@link namedHueRgb}.
 */
export var Hue;
(function (Hue) {
    Hue[Hue["RED"] = 0] = "RED";
    Hue[Hue["ORANGE"] = 1] = "ORANGE";
    Hue[Hue["YELLOW"] = 2] = "YELLOW";
    Hue[Hue["CHARTREUSE"] = 3] = "CHARTREUSE";
    Hue[Hue["GREEN"] = 4] = "GREEN";
    Hue[Hue["SPRING_GREEN"] = 5] = "SPRING_GREEN";
    Hue[Hue["CYAN"] = 6] = "CYAN";
    Hue[Hue["AZURE"] = 7] = "AZURE";
    Hue[Hue["BLUE"] = 8] = "BLUE";
    Hue[Hue["VIOLET"] = 9] = "VIOLET";
    Hue[Hue["MAGENTA"] = 10] = "MAGENTA";
    Hue[Hue["ROSE"] = 11] = "ROSE";
})(Hue || (Hue = {}));
/**
 * Result type returned by {@link parseCss}, a simple wrapper for a raw color
 * array and color mode.
 */
export class ParsedColor {
    constructor(mode, value) {
        this.mode = mode;
        this.value = value;
    }
    deref() {
        return this.value;
    }
}
