import type { NumericArray } from "@thi.ng/api";
import type { IRandom } from "@thi.ng/random";
import type { Color, ColorFactory, ReadonlyColor, TypedColor } from "../api.js";
export declare class YCC implements TypedColor<YCC> {
    buf: NumericArray;
    offset: number;
    stride: number;
    y: number;
    cb: number;
    cr: number;
    alpha: number;
    [id: number]: number;
    readonly mode: "ycc";
    readonly length: 4;
    readonly range: [ReadonlyColor, ReadonlyColor];
    [Symbol.iterator](): Iterator<number, any, undefined>;
    clamp(): this;
    copy(): YCC;
    copyView(): YCC;
    deref(): Color;
    empty(): YCC;
    eqDelta(o: YCC, eps?: number): boolean;
    randomize(rnd?: IRandom): this;
    set(src: ReadonlyColor): this;
    toJSON(): number[];
}
export declare const ycc: ColorFactory<YCC>;
//# sourceMappingURL=ycc.d.ts.map