import type { IRandom } from "@thi.ng/random";
import type { ColorFactory, ColorMode, ColorSpec, ReadonlyColor, TypedColor } from "./api.js";
declare type $DefColor<M extends ColorMode, K extends string> = {
    [k in K]: number;
} & {
    readonly mode: M;
    random(rnd?: IRandom): $DefColor<M, K>;
    set(src: ReadonlyColor): $DefColor<M, K>;
    toJSON(): number[];
} & TypedColor<$DefColor<M, K>>;
export declare const defColor: <M extends ColorMode, K extends string>(spec: ColorSpec<M, K>) => ColorFactory<$DefColor<M, K>>;
export {};
//# sourceMappingURL=defcolor.d.ts.map